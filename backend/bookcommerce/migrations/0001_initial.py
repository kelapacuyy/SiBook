# Generated by Django 5.0.6 on 2024-05-12 08:05

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('receiver_name', models.CharField(max_length=100)),
                ('receiver_phone', models.CharField(max_length=15)),
                ('province', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('ward', models.CharField(max_length=50)),
                ('zipcode', models.CharField(max_length=10)),
                ('full_address', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('nationality', models.CharField(max_length=100)),
                ('author_img', models.ImageField(upload_to='uploads/authors/')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('groups', models.ManyToManyField(related_name='customers', to='auth.group')),
                ('user_permissions', models.ManyToManyField(related_name='customers', to='auth.permission')),
                ('address', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookcommerce.address')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('cover_img', models.ImageField(upload_to='uploads/books/')),
                ('description', models.TextField()),
                ('stock', models.IntegerField(default=0)),
                ('price', models.IntegerField(default=0)),
                ('isbn', models.CharField(max_length=13, null=True, unique=True)),
                ('category', models.CharField(max_length=100, null=True)),
                ('language', models.CharField(max_length=100, null=True)),
                ('cover_type', models.CharField(max_length=20, null=True)),
                ('pages', models.IntegerField(default=0)),
                ('publisher', models.CharField(max_length=100, null=True)),
                ('publish_date', models.DateField(null=True)),
                ('weight', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('length', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('width', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('author', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bookcommerce.author')),
                ('genres', models.ManyToManyField(to='bookcommerce.genre')),
                ('series', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='bookcommerce.series')),
            ],
        ),
    ]
